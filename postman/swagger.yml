openapi: 3.0.0
info:
  title: hyrefast
  version: 1.0.0
servers:
  - url: http://{{url}}
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    undefinedAuth:
      type: http
tags:
  - name: client
    description: client APIs
  - name: client > credit
    description: credit Model APIs
  - name: client > Social Login
    description: Login Through Social Accounts
  - name: client > Push Notification
    description: Push Notification Routes
  - name: client > File Upload
    description: Upload Files
  - name: client > payment
    description: payment Model APIs
  - name: client > plan
    description: plan Model APIs
  - name: client > purchase
    description: purchase Model APIs
  - name: client > invitations
    description: invitations Model APIs
  - name: client > workspace
    description: workspace Model APIs
  - name: client > response
    description: response Model APIs
  - name: client > application
    description: application Model APIs
  - name: client > question
    description: question Model APIs
  - name: client > job
    description: job Model APIs
  - name: client > recruiter
    description: recruiter Model APIs
  - name: client > user
    description: user Model APIs
  - name: client > login
    description: client Login
  - name: client > role
    description: role Model APIs
  - name: client > projectRoute
    description: projectRoute Model APIs
  - name: client > routeRole
    description: routeRole Model APIs
  - name: client > userRole
    description: userRole Model APIs
paths:
  /client/api/v1/credit/{id}:
    get:
      tags:
        - client > credit
      summary: getcredit
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  workspace: 68b3fa147a03b547a3ec7c22
                  deduction: 245
                  addition: 274
                  is_added: false
                  application: 68b3fa147a03b547a3ec7c23
                  balance:
                    - _id: false
                      credits: 770
                      expiry: '2026-03-31T07:13:53.321Z'
                      is_promo: false
                      no_expiry: false
                  id: 68b3fa147a03b547a3ec7c27
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-07-04T10:47:09.569Z'
                  updatedAt: '2026-06-25T02:35:15.369Z'
  /client/api/v1/credit/create:
    post:
      tags:
        - client > credit
      summary: addcredit
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                workspace: 68b3fa147a03b547a3ec7c22
                deduction: 245
                addition: 274
                is_added: false
                application: 68b3fa147a03b547a3ec7c23
                balance:
                  - _id: false
                    credits: 770
                    expiry: '2026-03-31T07:13:53.321Z'
                    is_promo: false
                    no_expiry: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  workspace: 68b3fa147a03b547a3ec7c22
                  deduction: 245
                  addition: 274
                  is_added: false
                  application: 68b3fa147a03b547a3ec7c23
                  balance:
                    - _id: false
                      credits: 770
                      expiry: '2026-03-31T07:13:53.321Z'
                      is_promo: false
                      no_expiry: false
                  id: 68b3fa147a03b547a3ec7c25
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-07-04T10:47:09.569Z'
                  updatedAt: '2026-06-25T02:35:15.369Z'
  /client/api/v1/credit/list:
    post:
      tags:
        - client > credit
      summary: findAllcredit
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - workspace: 68b3fa147a03b547a3ec7c22
                      deduction: 245
                      addition: 274
                      is_added: false
                      application: 68b3fa147a03b547a3ec7c23
                      balance:
                        - _id: false
                          credits: 770
                          expiry: '2026-03-31T07:13:53.321Z'
                          is_promo: false
                          no_expiry: false
                      id: 68b3fa147a03b547a3ec7c26
                      isDeleted: false
                      isActive: true
                      createdAt: '2026-07-04T10:47:09.569Z'
                      updatedAt: '2026-06-25T02:35:15.369Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/credit/count:
    post:
      tags:
        - client > credit
      summary: getcreditCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/credit/addBulk:
    post:
      tags:
        - client > credit
      summary: insertBulkcredit
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - workspace: 68b3fa147a03b547a3ec7c22
                    deduction: 245
                    addition: 274
                    is_added: false
                    application: 68b3fa147a03b547a3ec7c23
                    balance:
                      - _id: false
                        credits: 770
                        expiry: '2026-03-31T07:13:53.321Z'
                        is_promo: false
                        no_expiry: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/credit/deleteMany:
    post:
      tags:
        - client > credit
      summary: deleteManycredit
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/credit/update/{id}:
    put:
      tags:
        - client > credit
      summary: updatecredit
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                workspace: 68b3fa147a03b547a3ec7c22
                deduction: 245
                addition: 274
                is_added: false
                application: 68b3fa147a03b547a3ec7c23
                balance:
                  - _id: false
                    credits: 770
                    expiry: '2026-03-31T07:13:53.321Z'
                    is_promo: false
                    no_expiry: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  workspace: 68b3fa147a03b547a3ec7c22
                  deduction: 245
                  addition: 274
                  is_added: false
                  application: 68b3fa147a03b547a3ec7c23
                  balance:
                    - _id: false
                      credits: 770
                      expiry: '2026-03-31T07:13:53.321Z'
                      is_promo: false
                      no_expiry: false
                  id: 68b3fa147a03b547a3ec7c28
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-07-04T10:47:09.569Z'
                  updatedAt: '2026-06-25T02:35:15.369Z'
  /client/api/v1/credit/partial-update/{id}:
    put:
      tags:
        - client > credit
      summary: partialupdatecredit
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  workspace: 68b3fa147a03b547a3ec7c22
                  deduction: 245
                  addition: 274
                  is_added: false
                  application: 68b3fa147a03b547a3ec7c23
                  balance:
                    - _id: false
                      credits: 770
                      expiry: '2026-03-31T07:13:53.321Z'
                      is_promo: false
                      no_expiry: false
                  id: 68b3fa147a03b547a3ec7c29
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-07-04T10:47:09.569Z'
                  updatedAt: '2026-06-25T02:35:15.369Z'
  /client/api/v1/credit/softDelete/{id}:
    put:
      tags:
        - client > credit
      summary: softDeletecredit
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/credit/softDeleteMany:
    put:
      tags:
        - client > credit
      summary: softDeleteManycredit
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/credit/updateBulk:
    put:
      tags:
        - client > credit
      summary: updateBulkcredit
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/credit/delete/{id}:
    delete:
      tags:
        - client > credit
      summary: deletecredit
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/auth/login/google:
    get:
      tags:
        - client > Social Login
      summary: Social Login through google
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /client/auth/push-notification/addPlayerId:
    post:
      tags:
        - client > Push Notification
      summary: Add Player Id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                userId: 611cbe48fe58009a1603f9f2
                playerId: xxx12345xxx
                deviceId: 2001abcdef
                isActive: true
                isDeleted: false
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /client/auth/push-notification/removePlayerId:
    post:
      tags:
        - client > Push Notification
      summary: Remove Player Id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                deviceId: 012345abcde
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /client/api/v1/upload:
    post:
      tags:
        - client > File Upload
      summary: File upload in client
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: string
                  description: Select file/s to upload
                  format: binary
                folder:
                  type: string
                  description: Optional, enable to upload file to specific folder
                  example: Enter foldername
                fileName:
                  type: string
                  description: Optional, enable to give Specific file name to uploaded File
                  example: Enter fileName
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  - status: true
                    path: path to download file
  /client/api/v1/generate-pre-signed-url:
    post:
      tags:
        - client > File Upload
      summary: Get Presigned Url for S3 private Upload
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                uri: s3 URL
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{token}}
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  - status: true
                    path: URL to access file
  /client/api/v1/payment/{id}:
    get:
      tags:
        - client > payment
      summary: getpayment
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  user: 68b3fa147a03b547a3ec7c2c
                  workspace: 68b3fa147a03b547a3ec7c2d
                  data: adapter
                  status: Switchable
                  is_subscription: false
                  currency: Polarised
                  platform: e-tailers
                  ip: panel
                  id: 68b3fa147a03b547a3ec7c31
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-08-26T16:58:16.344Z'
                  updatedAt: '2026-07-14T04:43:31.116Z'
  /client/api/v1/payment/create:
    post:
      tags:
        - client > payment
      summary: addpayment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user: 68b3fa147a03b547a3ec7c2c
                workspace: 68b3fa147a03b547a3ec7c2d
                data: adapter
                status: Switchable
                is_subscription: false
                currency: Polarised
                platform: e-tailers
                ip: panel
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  user: 68b3fa147a03b547a3ec7c2c
                  workspace: 68b3fa147a03b547a3ec7c2d
                  data: adapter
                  status: Switchable
                  is_subscription: false
                  currency: Polarised
                  platform: e-tailers
                  ip: panel
                  id: 68b3fa147a03b547a3ec7c2f
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-08-26T16:58:16.344Z'
                  updatedAt: '2026-07-14T04:43:31.116Z'
  /client/api/v1/payment/list:
    post:
      tags:
        - client > payment
      summary: findAllpayment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - user: 68b3fa147a03b547a3ec7c2c
                      workspace: 68b3fa147a03b547a3ec7c2d
                      data: adapter
                      status: Switchable
                      is_subscription: false
                      currency: Polarised
                      platform: e-tailers
                      ip: panel
                      id: 68b3fa147a03b547a3ec7c30
                      isDeleted: false
                      isActive: true
                      createdAt: '2026-08-26T16:58:16.344Z'
                      updatedAt: '2026-07-14T04:43:31.116Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/payment/count:
    post:
      tags:
        - client > payment
      summary: getpaymentCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/payment/addBulk:
    post:
      tags:
        - client > payment
      summary: insertBulkpayment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - user: 68b3fa147a03b547a3ec7c2c
                    workspace: 68b3fa147a03b547a3ec7c2d
                    data: adapter
                    status: Switchable
                    is_subscription: false
                    currency: Polarised
                    platform: e-tailers
                    ip: panel
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/payment/deleteMany:
    post:
      tags:
        - client > payment
      summary: deleteManypayment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/payment/update/{id}:
    put:
      tags:
        - client > payment
      summary: updatepayment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user: 68b3fa147a03b547a3ec7c2c
                workspace: 68b3fa147a03b547a3ec7c2d
                data: adapter
                status: Switchable
                is_subscription: false
                currency: Polarised
                platform: e-tailers
                ip: panel
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  user: 68b3fa147a03b547a3ec7c2c
                  workspace: 68b3fa147a03b547a3ec7c2d
                  data: adapter
                  status: Switchable
                  is_subscription: false
                  currency: Polarised
                  platform: e-tailers
                  ip: panel
                  id: 68b3fa147a03b547a3ec7c32
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-08-26T16:58:16.344Z'
                  updatedAt: '2026-07-14T04:43:31.116Z'
  /client/api/v1/payment/partial-update/{id}:
    put:
      tags:
        - client > payment
      summary: partialupdatepayment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  user: 68b3fa147a03b547a3ec7c2c
                  workspace: 68b3fa147a03b547a3ec7c2d
                  data: adapter
                  status: Switchable
                  is_subscription: false
                  currency: Polarised
                  platform: e-tailers
                  ip: panel
                  id: 68b3fa147a03b547a3ec7c33
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-08-26T16:58:16.344Z'
                  updatedAt: '2026-07-14T04:43:31.116Z'
  /client/api/v1/payment/softDelete/{id}:
    put:
      tags:
        - client > payment
      summary: softDeletepayment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/payment/softDeleteMany:
    put:
      tags:
        - client > payment
      summary: softDeleteManypayment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/payment/updateBulk:
    put:
      tags:
        - client > payment
      summary: updateBulkpayment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/payment/delete/{id}:
    delete:
      tags:
        - client > payment
      summary: deletepayment
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/plan/{id}:
    get:
      tags:
        - client > plan
      summary: getplan
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Vivian Wilderman
                  credits: 632
                  validity:
                    text: back
                    days: 33
                  amount: 68
                  currency: Baby
                  id: 68b3fa147a03b547a3ec7c39
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-09-18T07:07:42.027Z'
                  updatedAt: '2026-01-19T04:22:24.401Z'
  /client/api/v1/plan/create:
    post:
      tags:
        - client > plan
      summary: addplan
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Vivian Wilderman
                credits: 632
                validity:
                  text: back
                  days: 33
                amount: 68
                currency: Baby
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Vivian Wilderman
                  credits: 632
                  validity:
                    text: back
                    days: 33
                  amount: 68
                  currency: Baby
                  id: 68b3fa147a03b547a3ec7c37
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-09-18T07:07:42.027Z'
                  updatedAt: '2026-01-19T04:22:24.401Z'
  /client/api/v1/plan/list:
    post:
      tags:
        - client > plan
      summary: findAllplan
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Vivian Wilderman
                      credits: 632
                      validity:
                        text: back
                        days: 33
                      amount: 68
                      currency: Baby
                      id: 68b3fa147a03b547a3ec7c38
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-09-18T07:07:42.027Z'
                      updatedAt: '2026-01-19T04:22:24.401Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/plan/count:
    post:
      tags:
        - client > plan
      summary: getplanCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/plan/addBulk:
    post:
      tags:
        - client > plan
      summary: insertBulkplan
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - name: Vivian Wilderman
                    credits: 632
                    validity:
                      text: back
                      days: 33
                    amount: 68
                    currency: Baby
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/plan/deleteMany:
    post:
      tags:
        - client > plan
      summary: deleteManyplan
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/plan/update/{id}:
    put:
      tags:
        - client > plan
      summary: updateplan
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Vivian Wilderman
                credits: 632
                validity:
                  text: back
                  days: 33
                amount: 68
                currency: Baby
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Vivian Wilderman
                  credits: 632
                  validity:
                    text: back
                    days: 33
                  amount: 68
                  currency: Baby
                  id: 68b3fa147a03b547a3ec7c3a
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-09-18T07:07:42.027Z'
                  updatedAt: '2026-01-19T04:22:24.401Z'
  /client/api/v1/plan/partial-update/{id}:
    put:
      tags:
        - client > plan
      summary: partialupdateplan
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Vivian Wilderman
                  credits: 632
                  validity:
                    text: back
                    days: 33
                  amount: 68
                  currency: Baby
                  id: 68b3fa147a03b547a3ec7c3b
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-09-18T07:07:42.027Z'
                  updatedAt: '2026-01-19T04:22:24.401Z'
  /client/api/v1/plan/softDelete/{id}:
    put:
      tags:
        - client > plan
      summary: softDeleteplan
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/plan/softDeleteMany:
    put:
      tags:
        - client > plan
      summary: softDeleteManyplan
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/plan/updateBulk:
    put:
      tags:
        - client > plan
      summary: updateBulkplan
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/plan/delete/{id}:
    delete:
      tags:
        - client > plan
      summary: deleteplan
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/purchase/{id}:
    get:
      tags:
        - client > purchase
      summary: getpurchase
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  workspace: 68b3fa147a03b547a3ec7c3e
                  plan: 68b3fa147a03b547a3ec7c3f
                  payment: 68b3fa147a03b547a3ec7c40
                  status: Usability
                  promo_code: connecting
                  is_affiliation: true
                  is_first_time: false
                  is_subscription: true
                  invoice_number: 369
                  amount: 51
                  currency: cross-media
                  id: 68b3fa147a03b547a3ec7c44
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-03-29T19:53:23.348Z'
                  updatedAt: '2026-07-28T14:14:38.633Z'
  /client/api/v1/purchase/create:
    post:
      tags:
        - client > purchase
      summary: addpurchase
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                workspace: 68b3fa147a03b547a3ec7c3e
                plan: 68b3fa147a03b547a3ec7c3f
                payment: 68b3fa147a03b547a3ec7c40
                status: Usability
                promo_code: connecting
                is_affiliation: true
                is_first_time: false
                is_subscription: true
                invoice_number: 369
                amount: 51
                currency: cross-media
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  workspace: 68b3fa147a03b547a3ec7c3e
                  plan: 68b3fa147a03b547a3ec7c3f
                  payment: 68b3fa147a03b547a3ec7c40
                  status: Usability
                  promo_code: connecting
                  is_affiliation: true
                  is_first_time: false
                  is_subscription: true
                  invoice_number: 369
                  amount: 51
                  currency: cross-media
                  id: 68b3fa147a03b547a3ec7c42
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-03-29T19:53:23.348Z'
                  updatedAt: '2026-07-28T14:14:38.633Z'
  /client/api/v1/purchase/list:
    post:
      tags:
        - client > purchase
      summary: findAllpurchase
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - workspace: 68b3fa147a03b547a3ec7c3e
                      plan: 68b3fa147a03b547a3ec7c3f
                      payment: 68b3fa147a03b547a3ec7c40
                      status: Usability
                      promo_code: connecting
                      is_affiliation: true
                      is_first_time: false
                      is_subscription: true
                      invoice_number: 369
                      amount: 51
                      currency: cross-media
                      id: 68b3fa147a03b547a3ec7c43
                      isDeleted: false
                      isActive: true
                      createdAt: '2026-03-29T19:53:23.348Z'
                      updatedAt: '2026-07-28T14:14:38.633Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/purchase/count:
    post:
      tags:
        - client > purchase
      summary: getpurchaseCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/purchase/addBulk:
    post:
      tags:
        - client > purchase
      summary: insertBulkpurchase
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - workspace: 68b3fa147a03b547a3ec7c3e
                    plan: 68b3fa147a03b547a3ec7c3f
                    payment: 68b3fa147a03b547a3ec7c40
                    status: Usability
                    promo_code: connecting
                    is_affiliation: true
                    is_first_time: false
                    is_subscription: true
                    invoice_number: 369
                    amount: 51
                    currency: cross-media
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/purchase/deleteMany:
    post:
      tags:
        - client > purchase
      summary: deleteManypurchase
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/purchase/update/{id}:
    put:
      tags:
        - client > purchase
      summary: updatepurchase
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                workspace: 68b3fa147a03b547a3ec7c3e
                plan: 68b3fa147a03b547a3ec7c3f
                payment: 68b3fa147a03b547a3ec7c40
                status: Usability
                promo_code: connecting
                is_affiliation: true
                is_first_time: false
                is_subscription: true
                invoice_number: 369
                amount: 51
                currency: cross-media
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  workspace: 68b3fa147a03b547a3ec7c3e
                  plan: 68b3fa147a03b547a3ec7c3f
                  payment: 68b3fa147a03b547a3ec7c40
                  status: Usability
                  promo_code: connecting
                  is_affiliation: true
                  is_first_time: false
                  is_subscription: true
                  invoice_number: 369
                  amount: 51
                  currency: cross-media
                  id: 68b3fa147a03b547a3ec7c45
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-03-29T19:53:23.348Z'
                  updatedAt: '2026-07-28T14:14:38.633Z'
  /client/api/v1/purchase/partial-update/{id}:
    put:
      tags:
        - client > purchase
      summary: partialupdatepurchase
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  workspace: 68b3fa147a03b547a3ec7c3e
                  plan: 68b3fa147a03b547a3ec7c3f
                  payment: 68b3fa147a03b547a3ec7c40
                  status: Usability
                  promo_code: connecting
                  is_affiliation: true
                  is_first_time: false
                  is_subscription: true
                  invoice_number: 369
                  amount: 51
                  currency: cross-media
                  id: 68b3fa147a03b547a3ec7c46
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-03-29T19:53:23.348Z'
                  updatedAt: '2026-07-28T14:14:38.633Z'
  /client/api/v1/purchase/softDelete/{id}:
    put:
      tags:
        - client > purchase
      summary: softDeletepurchase
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/purchase/softDeleteMany:
    put:
      tags:
        - client > purchase
      summary: softDeleteManypurchase
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/purchase/updateBulk:
    put:
      tags:
        - client > purchase
      summary: updateBulkpurchase
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/purchase/delete/{id}:
    delete:
      tags:
        - client > purchase
      summary: deletepurchase
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/invitations/{id}:
    get:
      tags:
        - client > invitations
      summary: getinvitations
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  company: 68b3fa147a03b547a3ec7c49
                  email: Fatima_Wisozk@hotmail.com
                  phone: (240) 110-2812
                  user: 68b3fa147a03b547a3ec7c4a
                  id: 68b3fa147a03b547a3ec7c4e
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-03-23T21:42:57.671Z'
                  updatedAt: '2026-06-16T02:14:00.832Z'
  /client/api/v1/invitations/create:
    post:
      tags:
        - client > invitations
      summary: addinvitations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                company: 68b3fa147a03b547a3ec7c49
                email: Fatima_Wisozk@hotmail.com
                phone: (240) 110-2812
                user: 68b3fa147a03b547a3ec7c4a
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  company: 68b3fa147a03b547a3ec7c49
                  email: Fatima_Wisozk@hotmail.com
                  phone: (240) 110-2812
                  user: 68b3fa147a03b547a3ec7c4a
                  id: 68b3fa147a03b547a3ec7c4c
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-03-23T21:42:57.671Z'
                  updatedAt: '2026-06-16T02:14:00.832Z'
  /client/api/v1/invitations/list:
    post:
      tags:
        - client > invitations
      summary: findAllinvitations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - company: 68b3fa147a03b547a3ec7c49
                      email: Fatima_Wisozk@hotmail.com
                      phone: (240) 110-2812
                      user: 68b3fa147a03b547a3ec7c4a
                      id: 68b3fa147a03b547a3ec7c4d
                      isDeleted: false
                      isActive: true
                      createdAt: '2026-03-23T21:42:57.671Z'
                      updatedAt: '2026-06-16T02:14:00.832Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/invitations/count:
    post:
      tags:
        - client > invitations
      summary: getinvitationsCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/invitations/addBulk:
    post:
      tags:
        - client > invitations
      summary: insertBulkinvitations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - company: 68b3fa147a03b547a3ec7c49
                    email: Fatima_Wisozk@hotmail.com
                    phone: (240) 110-2812
                    user: 68b3fa147a03b547a3ec7c4a
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/invitations/deleteMany:
    post:
      tags:
        - client > invitations
      summary: deleteManyinvitations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/invitations/update/{id}:
    put:
      tags:
        - client > invitations
      summary: updateinvitations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                company: 68b3fa147a03b547a3ec7c49
                email: Fatima_Wisozk@hotmail.com
                phone: (240) 110-2812
                user: 68b3fa147a03b547a3ec7c4a
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  company: 68b3fa147a03b547a3ec7c49
                  email: Fatima_Wisozk@hotmail.com
                  phone: (240) 110-2812
                  user: 68b3fa147a03b547a3ec7c4a
                  id: 68b3fa147a03b547a3ec7c4f
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-03-23T21:42:57.671Z'
                  updatedAt: '2026-06-16T02:14:00.832Z'
  /client/api/v1/invitations/partial-update/{id}:
    put:
      tags:
        - client > invitations
      summary: partialupdateinvitations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  company: 68b3fa147a03b547a3ec7c49
                  email: Fatima_Wisozk@hotmail.com
                  phone: (240) 110-2812
                  user: 68b3fa147a03b547a3ec7c4a
                  id: 68b3fa147a03b547a3ec7c50
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-03-23T21:42:57.671Z'
                  updatedAt: '2026-06-16T02:14:00.832Z'
  /client/api/v1/invitations/softDelete/{id}:
    put:
      tags:
        - client > invitations
      summary: softDeleteinvitations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/invitations/softDeleteMany:
    put:
      tags:
        - client > invitations
      summary: softDeleteManyinvitations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/invitations/updateBulk:
    put:
      tags:
        - client > invitations
      summary: updateBulkinvitations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/invitations/delete/{id}:
    delete:
      tags:
        - client > invitations
      summary: deleteinvitations
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/workspace/{id}:
    get:
      tags:
        - client > workspace
      summary: getworkspace
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Jacquelyn Ziemann
                  website: digital
                  legal_name: unleash
                  logo: product
                  address: 711 Mayer Trace
                  admin: 68b3fa147a03b547a3ec7c53
                  credit_balance: 933
                  id: 68b3fa147a03b547a3ec7c57
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-11-03T14:12:26.964Z'
                  updatedAt: '2026-04-12T05:43:47.406Z'
  /client/api/v1/workspace/create:
    post:
      tags:
        - client > workspace
      summary: addworkspace
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Jacquelyn Ziemann
                website: digital
                legal_name: unleash
                logo: product
                address: 711 Mayer Trace
                admin: 68b3fa147a03b547a3ec7c53
                credit_balance: 933
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Jacquelyn Ziemann
                  website: digital
                  legal_name: unleash
                  logo: product
                  address: 711 Mayer Trace
                  admin: 68b3fa147a03b547a3ec7c53
                  credit_balance: 933
                  id: 68b3fa147a03b547a3ec7c55
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-11-03T14:12:26.964Z'
                  updatedAt: '2026-04-12T05:43:47.406Z'
  /client/api/v1/workspace/list:
    post:
      tags:
        - client > workspace
      summary: findAllworkspace
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Jacquelyn Ziemann
                      website: digital
                      legal_name: unleash
                      logo: product
                      address: 711 Mayer Trace
                      admin: 68b3fa147a03b547a3ec7c53
                      credit_balance: 933
                      id: 68b3fa147a03b547a3ec7c56
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-11-03T14:12:26.964Z'
                      updatedAt: '2026-04-12T05:43:47.406Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/workspace/count:
    post:
      tags:
        - client > workspace
      summary: getworkspaceCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/workspace/addBulk:
    post:
      tags:
        - client > workspace
      summary: insertBulkworkspace
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - name: Jacquelyn Ziemann
                    website: digital
                    legal_name: unleash
                    logo: product
                    address: 711 Mayer Trace
                    admin: 68b3fa147a03b547a3ec7c53
                    credit_balance: 933
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/workspace/deleteMany:
    post:
      tags:
        - client > workspace
      summary: deleteManyworkspace
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/workspace/update/{id}:
    put:
      tags:
        - client > workspace
      summary: updateworkspace
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Jacquelyn Ziemann
                website: digital
                legal_name: unleash
                logo: product
                address: 711 Mayer Trace
                admin: 68b3fa147a03b547a3ec7c53
                credit_balance: 933
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Jacquelyn Ziemann
                  website: digital
                  legal_name: unleash
                  logo: product
                  address: 711 Mayer Trace
                  admin: 68b3fa147a03b547a3ec7c53
                  credit_balance: 933
                  id: 68b3fa147a03b547a3ec7c58
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-11-03T14:12:26.964Z'
                  updatedAt: '2026-04-12T05:43:47.406Z'
  /client/api/v1/workspace/partial-update/{id}:
    put:
      tags:
        - client > workspace
      summary: partialupdateworkspace
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Jacquelyn Ziemann
                  website: digital
                  legal_name: unleash
                  logo: product
                  address: 711 Mayer Trace
                  admin: 68b3fa147a03b547a3ec7c53
                  credit_balance: 933
                  id: 68b3fa147a03b547a3ec7c59
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-11-03T14:12:26.964Z'
                  updatedAt: '2026-04-12T05:43:47.406Z'
  /client/api/v1/workspace/softDelete/{id}:
    put:
      tags:
        - client > workspace
      summary: softDeleteworkspace
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/workspace/softDeleteMany:
    put:
      tags:
        - client > workspace
      summary: softDeleteManyworkspace
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/workspace/updateBulk:
    put:
      tags:
        - client > workspace
      summary: updateBulkworkspace
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/workspace/delete/{id}:
    delete:
      tags:
        - client > workspace
      summary: deleteworkspace
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/response/{id}:
    get:
      tags:
        - client > response
      summary: getresponse
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  job: 68b3fa147a03b547a3ec7c5c
                  question: 68b3fa147a03b547a3ec7c5d
                  candidate: 68b3fa147a03b547a3ec7c5e
                  score: portals
                  sessionId: 68b3fa147a03b547a3ec7c5f
                  questionNumber: 553
                  questionText: Granite
                  responseText: Dollar
                  responseAudioUrl: Future
                  responseVideoUrl: Multi-lateral
                  transcriptionText: iterate
                  id: 68b3fa147a03b547a3ec7c63
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-11-22T23:28:48.385Z'
                  updatedAt: '2026-06-05T14:54:46.672Z'
  /client/api/v1/response/create:
    post:
      tags:
        - client > response
      summary: addresponse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                job: 68b3fa147a03b547a3ec7c5c
                question: 68b3fa147a03b547a3ec7c5d
                candidate: 68b3fa147a03b547a3ec7c5e
                score: portals
                sessionId: 68b3fa147a03b547a3ec7c5f
                questionNumber: 553
                questionText: Granite
                responseText: Dollar
                responseAudioUrl: Future
                responseVideoUrl: Multi-lateral
                transcriptionText: iterate
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  job: 68b3fa147a03b547a3ec7c5c
                  question: 68b3fa147a03b547a3ec7c5d
                  candidate: 68b3fa147a03b547a3ec7c5e
                  score: portals
                  sessionId: 68b3fa147a03b547a3ec7c5f
                  questionNumber: 553
                  questionText: Granite
                  responseText: Dollar
                  responseAudioUrl: Future
                  responseVideoUrl: Multi-lateral
                  transcriptionText: iterate
                  id: 68b3fa147a03b547a3ec7c61
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-11-22T23:28:48.385Z'
                  updatedAt: '2026-06-05T14:54:46.672Z'
  /client/api/v1/response/list:
    post:
      tags:
        - client > response
      summary: findAllresponse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - job: 68b3fa147a03b547a3ec7c5c
                      question: 68b3fa147a03b547a3ec7c5d
                      candidate: 68b3fa147a03b547a3ec7c5e
                      score: portals
                      sessionId: 68b3fa147a03b547a3ec7c5f
                      questionNumber: 553
                      questionText: Granite
                      responseText: Dollar
                      responseAudioUrl: Future
                      responseVideoUrl: Multi-lateral
                      transcriptionText: iterate
                      id: 68b3fa147a03b547a3ec7c62
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-11-22T23:28:48.385Z'
                      updatedAt: '2026-06-05T14:54:46.672Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/response/count:
    post:
      tags:
        - client > response
      summary: getresponseCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/response/addBulk:
    post:
      tags:
        - client > response
      summary: insertBulkresponse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - job: 68b3fa147a03b547a3ec7c5c
                    question: 68b3fa147a03b547a3ec7c5d
                    candidate: 68b3fa147a03b547a3ec7c5e
                    score: portals
                    sessionId: 68b3fa147a03b547a3ec7c5f
                    questionNumber: 553
                    questionText: Granite
                    responseText: Dollar
                    responseAudioUrl: Future
                    responseVideoUrl: Multi-lateral
                    transcriptionText: iterate
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/response/deleteMany:
    post:
      tags:
        - client > response
      summary: deleteManyresponse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/response/update/{id}:
    put:
      tags:
        - client > response
      summary: updateresponse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                job: 68b3fa147a03b547a3ec7c5c
                question: 68b3fa147a03b547a3ec7c5d
                candidate: 68b3fa147a03b547a3ec7c5e
                score: portals
                sessionId: 68b3fa147a03b547a3ec7c5f
                questionNumber: 553
                questionText: Granite
                responseText: Dollar
                responseAudioUrl: Future
                responseVideoUrl: Multi-lateral
                transcriptionText: iterate
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  job: 68b3fa147a03b547a3ec7c5c
                  question: 68b3fa147a03b547a3ec7c5d
                  candidate: 68b3fa147a03b547a3ec7c5e
                  score: portals
                  sessionId: 68b3fa147a03b547a3ec7c5f
                  questionNumber: 553
                  questionText: Granite
                  responseText: Dollar
                  responseAudioUrl: Future
                  responseVideoUrl: Multi-lateral
                  transcriptionText: iterate
                  id: 68b3fa147a03b547a3ec7c64
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-11-22T23:28:48.385Z'
                  updatedAt: '2026-06-05T14:54:46.672Z'
  /client/api/v1/response/partial-update/{id}:
    put:
      tags:
        - client > response
      summary: partialupdateresponse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  job: 68b3fa147a03b547a3ec7c5c
                  question: 68b3fa147a03b547a3ec7c5d
                  candidate: 68b3fa147a03b547a3ec7c5e
                  score: portals
                  sessionId: 68b3fa147a03b547a3ec7c5f
                  questionNumber: 553
                  questionText: Granite
                  responseText: Dollar
                  responseAudioUrl: Future
                  responseVideoUrl: Multi-lateral
                  transcriptionText: iterate
                  id: 68b3fa147a03b547a3ec7c65
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-11-22T23:28:48.385Z'
                  updatedAt: '2026-06-05T14:54:46.672Z'
  /client/api/v1/response/softDelete/{id}:
    put:
      tags:
        - client > response
      summary: softDeleteresponse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/response/softDeleteMany:
    put:
      tags:
        - client > response
      summary: softDeleteManyresponse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/response/updateBulk:
    put:
      tags:
        - client > response
      summary: updateBulkresponse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/response/delete/{id}:
    delete:
      tags:
        - client > response
      summary: deleteresponse
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/application/{id}:
    get:
      tags:
        - client > application
      summary: getapplication
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  candidate: 68b3fa147a03b547a3ec7c68
                  job: 68b3fa147a03b547a3ec7c69
                  id: 68b3fa147a03b547a3ec7c6d
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-10-14T18:42:02.503Z'
                  updatedAt: '2026-01-26T06:59:11.383Z'
  /client/api/v1/application/create:
    post:
      tags:
        - client > application
      summary: addapplication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                candidate: 68b3fa147a03b547a3ec7c68
                job: 68b3fa147a03b547a3ec7c69
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  candidate: 68b3fa147a03b547a3ec7c68
                  job: 68b3fa147a03b547a3ec7c69
                  id: 68b3fa147a03b547a3ec7c6b
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-10-14T18:42:02.503Z'
                  updatedAt: '2026-01-26T06:59:11.383Z'
  /client/api/v1/application/list:
    post:
      tags:
        - client > application
      summary: findAllapplication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - candidate: 68b3fa147a03b547a3ec7c68
                      job: 68b3fa147a03b547a3ec7c69
                      id: 68b3fa147a03b547a3ec7c6c
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-10-14T18:42:02.503Z'
                      updatedAt: '2026-01-26T06:59:11.383Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/application/count:
    post:
      tags:
        - client > application
      summary: getapplicationCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/application/addBulk:
    post:
      tags:
        - client > application
      summary: insertBulkapplication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - candidate: 68b3fa147a03b547a3ec7c68
                    job: 68b3fa147a03b547a3ec7c69
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/application/deleteMany:
    post:
      tags:
        - client > application
      summary: deleteManyapplication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/application/update/{id}:
    put:
      tags:
        - client > application
      summary: updateapplication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                candidate: 68b3fa147a03b547a3ec7c68
                job: 68b3fa147a03b547a3ec7c69
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  candidate: 68b3fa147a03b547a3ec7c68
                  job: 68b3fa147a03b547a3ec7c69
                  id: 68b3fa147a03b547a3ec7c6e
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-10-14T18:42:02.503Z'
                  updatedAt: '2026-01-26T06:59:11.383Z'
  /client/api/v1/application/partial-update/{id}:
    put:
      tags:
        - client > application
      summary: partialupdateapplication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  candidate: 68b3fa147a03b547a3ec7c68
                  job: 68b3fa147a03b547a3ec7c69
                  id: 68b3fa147a03b547a3ec7c6f
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-10-14T18:42:02.503Z'
                  updatedAt: '2026-01-26T06:59:11.383Z'
  /client/api/v1/application/softDelete/{id}:
    put:
      tags:
        - client > application
      summary: softDeleteapplication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/application/softDeleteMany:
    put:
      tags:
        - client > application
      summary: softDeleteManyapplication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/application/updateBulk:
    put:
      tags:
        - client > application
      summary: updateBulkapplication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/application/delete/{id}:
    delete:
      tags:
        - client > application
      summary: deleteapplication
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/question/{id}:
    get:
      tags:
        - client > question
      summary: getquestion
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  title: analyzing
                  question_type: Dollar
                  evaluation_instructions: Squares
                  id: 68b3fa147a03b547a3ec7c75
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-08-09T01:12:11.461Z'
                  updatedAt: '2026-08-04T07:58:06.303Z'
  /client/api/v1/question/create:
    post:
      tags:
        - client > question
      summary: addquestion
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: analyzing
                question_type: Dollar
                evaluation_instructions: Squares
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  title: analyzing
                  question_type: Dollar
                  evaluation_instructions: Squares
                  id: 68b3fa147a03b547a3ec7c73
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-08-09T01:12:11.461Z'
                  updatedAt: '2026-08-04T07:58:06.303Z'
  /client/api/v1/question/list:
    post:
      tags:
        - client > question
      summary: findAllquestion
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - title: analyzing
                      question_type: Dollar
                      evaluation_instructions: Squares
                      id: 68b3fa147a03b547a3ec7c74
                      isDeleted: false
                      isActive: true
                      createdAt: '2026-08-09T01:12:11.461Z'
                      updatedAt: '2026-08-04T07:58:06.303Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/question/count:
    post:
      tags:
        - client > question
      summary: getquestionCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/question/addBulk:
    post:
      tags:
        - client > question
      summary: insertBulkquestion
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - title: analyzing
                    question_type: Dollar
                    evaluation_instructions: Squares
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/question/deleteMany:
    post:
      tags:
        - client > question
      summary: deleteManyquestion
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/question/update/{id}:
    put:
      tags:
        - client > question
      summary: updatequestion
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: analyzing
                question_type: Dollar
                evaluation_instructions: Squares
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  title: analyzing
                  question_type: Dollar
                  evaluation_instructions: Squares
                  id: 68b3fa147a03b547a3ec7c76
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-08-09T01:12:11.461Z'
                  updatedAt: '2026-08-04T07:58:06.303Z'
  /client/api/v1/question/partial-update/{id}:
    put:
      tags:
        - client > question
      summary: partialupdatequestion
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  title: analyzing
                  question_type: Dollar
                  evaluation_instructions: Squares
                  id: 68b3fa147a03b547a3ec7c77
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-08-09T01:12:11.461Z'
                  updatedAt: '2026-08-04T07:58:06.303Z'
  /client/api/v1/question/softDelete/{id}:
    put:
      tags:
        - client > question
      summary: softDeletequestion
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/question/softDeleteMany:
    put:
      tags:
        - client > question
      summary: softDeleteManyquestion
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/question/updateBulk:
    put:
      tags:
        - client > question
      summary: updateBulkquestion
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/question/delete/{id}:
    delete:
      tags:
        - client > question
      summary: deletequestion
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/job/{id}:
    get:
      tags:
        - client > job
      summary: getjob
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  title: compressing
                  last_date: reboot
                  salary: Direct
                  workspace: 68b3fa147a03b547a3ec7c7a
                  id: 68b3fa147a03b547a3ec7c7e
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-02-25T02:41:56.796Z'
                  updatedAt: '2026-05-12T23:01:50.347Z'
  /client/api/v1/job/create:
    post:
      tags:
        - client > job
      summary: addjob
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: compressing
                last_date: reboot
                salary: Direct
                workspace: 68b3fa147a03b547a3ec7c7a
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  title: compressing
                  last_date: reboot
                  salary: Direct
                  workspace: 68b3fa147a03b547a3ec7c7a
                  id: 68b3fa147a03b547a3ec7c7c
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-02-25T02:41:56.796Z'
                  updatedAt: '2026-05-12T23:01:50.347Z'
  /client/api/v1/job/list:
    post:
      tags:
        - client > job
      summary: findAlljob
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - title: compressing
                      last_date: reboot
                      salary: Direct
                      workspace: 68b3fa147a03b547a3ec7c7a
                      id: 68b3fa147a03b547a3ec7c7d
                      isDeleted: false
                      isActive: true
                      createdAt: '2026-02-25T02:41:56.796Z'
                      updatedAt: '2026-05-12T23:01:50.347Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/job/count:
    post:
      tags:
        - client > job
      summary: getjobCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/job/addBulk:
    post:
      tags:
        - client > job
      summary: insertBulkjob
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - title: compressing
                    last_date: reboot
                    salary: Direct
                    workspace: 68b3fa147a03b547a3ec7c7a
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/job/deleteMany:
    post:
      tags:
        - client > job
      summary: deleteManyjob
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/job/update/{id}:
    put:
      tags:
        - client > job
      summary: updatejob
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: compressing
                last_date: reboot
                salary: Direct
                workspace: 68b3fa147a03b547a3ec7c7a
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  title: compressing
                  last_date: reboot
                  salary: Direct
                  workspace: 68b3fa147a03b547a3ec7c7a
                  id: 68b3fa147a03b547a3ec7c7f
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-02-25T02:41:56.796Z'
                  updatedAt: '2026-05-12T23:01:50.347Z'
  /client/api/v1/job/partial-update/{id}:
    put:
      tags:
        - client > job
      summary: partialupdatejob
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  title: compressing
                  last_date: reboot
                  salary: Direct
                  workspace: 68b3fa147a03b547a3ec7c7a
                  id: 68b3fa147a03b547a3ec7c80
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-02-25T02:41:56.796Z'
                  updatedAt: '2026-05-12T23:01:50.347Z'
  /client/api/v1/job/softDelete/{id}:
    put:
      tags:
        - client > job
      summary: softDeletejob
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/job/softDeleteMany:
    put:
      tags:
        - client > job
      summary: softDeleteManyjob
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/job/updateBulk:
    put:
      tags:
        - client > job
      summary: updateBulkjob
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/job/delete/{id}:
    delete:
      tags:
        - client > job
      summary: deletejob
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/recruiter/{id}:
    get:
      tags:
        - client > recruiter
      summary: getrecruiter
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Kenny Rowe
                  company: 68b3fa147a03b547a3ec7c83
                  admin: Re-contextualized
                  id: 68b3fa147a03b547a3ec7c87
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-02-19T11:40:46.350Z'
                  updatedAt: '2025-09-30T10:02:27.345Z'
  /client/api/v1/recruiter/create:
    post:
      tags:
        - client > recruiter
      summary: addrecruiter
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Kenny Rowe
                company: 68b3fa147a03b547a3ec7c83
                admin: Re-contextualized
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Kenny Rowe
                  company: 68b3fa147a03b547a3ec7c83
                  admin: Re-contextualized
                  id: 68b3fa147a03b547a3ec7c85
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-02-19T11:40:46.350Z'
                  updatedAt: '2025-09-30T10:02:27.345Z'
  /client/api/v1/recruiter/list:
    post:
      tags:
        - client > recruiter
      summary: findAllrecruiter
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Kenny Rowe
                      company: 68b3fa147a03b547a3ec7c83
                      admin: Re-contextualized
                      id: 68b3fa147a03b547a3ec7c86
                      isDeleted: false
                      isActive: true
                      createdAt: '2026-02-19T11:40:46.350Z'
                      updatedAt: '2025-09-30T10:02:27.345Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/recruiter/count:
    post:
      tags:
        - client > recruiter
      summary: getrecruiterCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/recruiter/addBulk:
    post:
      tags:
        - client > recruiter
      summary: insertBulkrecruiter
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - name: Kenny Rowe
                    company: 68b3fa147a03b547a3ec7c83
                    admin: Re-contextualized
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/recruiter/deleteMany:
    post:
      tags:
        - client > recruiter
      summary: deleteManyrecruiter
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/recruiter/update/{id}:
    put:
      tags:
        - client > recruiter
      summary: updaterecruiter
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Kenny Rowe
                company: 68b3fa147a03b547a3ec7c83
                admin: Re-contextualized
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Kenny Rowe
                  company: 68b3fa147a03b547a3ec7c83
                  admin: Re-contextualized
                  id: 68b3fa147a03b547a3ec7c88
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-02-19T11:40:46.350Z'
                  updatedAt: '2025-09-30T10:02:27.345Z'
  /client/api/v1/recruiter/partial-update/{id}:
    put:
      tags:
        - client > recruiter
      summary: partialupdaterecruiter
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Kenny Rowe
                  company: 68b3fa147a03b547a3ec7c83
                  admin: Re-contextualized
                  id: 68b3fa147a03b547a3ec7c89
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-02-19T11:40:46.350Z'
                  updatedAt: '2025-09-30T10:02:27.345Z'
  /client/api/v1/recruiter/softDelete/{id}:
    put:
      tags:
        - client > recruiter
      summary: softDeleterecruiter
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/recruiter/softDeleteMany:
    put:
      tags:
        - client > recruiter
      summary: softDeleteManyrecruiter
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/recruiter/updateBulk:
    put:
      tags:
        - client > recruiter
      summary: updateBulkrecruiter
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/recruiter/delete/{id}:
    delete:
      tags:
        - client > recruiter
      summary: deleterecruiter
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/user/me:
    get:
      tags:
        - client > user
      summary: get loggedin User
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Kelli.Ziemann
                  email: Summer.Braun@hotmail.com
                  name: Lionel Sanford II
                  workspace: 68b3fa147a03b547a3ec7c8c
                  mobileNo: (689) 121-4611
                  userType: 1
                  id: 68b3fa147a03b547a3ec7c8f
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-08-04T20:11:35.434Z'
                  updatedAt: '2025-09-21T05:06:35.509Z'
  /client/api/v1/user/update-profile:
    put:
      tags:
        - client > user
      summary: updateProfile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: Kelli.Ziemann
                password: LxiKL0esjeLSYKH
                email: Summer.Braun@hotmail.com
                name: Lionel Sanford II
                workspace: 68b3fa147a03b547a3ec7c8c
                mobileNo: (689) 121-4611
                userType: 1
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Kelli.Ziemann
                  email: Summer.Braun@hotmail.com
                  name: Lionel Sanford II
                  workspace: 68b3fa147a03b547a3ec7c8c
                  mobileNo: (689) 121-4611
                  userType: 1
                  id: 68b3fa147a03b547a3ec7c8e
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-08-04T20:11:35.434Z'
                  updatedAt: '2025-09-21T05:06:35.509Z'
  /client/auth/send_otp_2fa:
    post:
      tags:
        - client > login
      summary: Send  OTP for two factor authentication in client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: username
                password: password
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Login Successful
                data: Please check your email/mobile for OTP
  /client/auth/login_with_2fa:
    post:
      tags:
        - client > login
      summary: Login With 2FA in client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: username
                password: password
                code: OTP
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Login Successful
                data: |-
                  {
                    "username": "Kelli.Ziemann",
                    "email": "Summer.Braun@hotmail.com",
                    "name": "Lionel Sanford II",
                    "workspace": "68b3fa147a03b547a3ec7c8c",
                    "mobileNo": "(689) 121-4611",
                    "id": "68b3fa147a03b547a3ec7c90",
                    "loginRetryLimit": 0,
                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMWRlZDVjMGFjMjAxMmFjMDI4ODkxZiIsInVzZXJuYW1lIjoiYWRtaW4iLCJpYXQiOjE2MjkzNTEyNzAsImV4cCI6MTYyOTk1MTI3MH0.BJ-WKjNYeFDQ4pn8kfli5gwn6GLz_c3voFht20Agj9k",
                    "isDeleted": false,
                    "isActive": true,
                    "createdAt": "2026-06-07T13:16:38.015Z",
                    "updatedAt": "2026-03-31T13:53:36.552Z"
                  }
  /client/auth/register:
    post:
      tags:
        - client > login
      summary: Register User in client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: Kelli.Ziemann
                password: LxiKL0esjeLSYKH
                email: Summer.Braun@hotmail.com
                name: Lionel Sanford II
                workspace: 68b3fa147a03b547a3ec7c8c
                mobileNo: (689) 121-4611
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Kelli.Ziemann
                  email: Summer.Braun@hotmail.com
                  name: Lionel Sanford II
                  workspace: 68b3fa147a03b547a3ec7c8c
                  mobileNo: (689) 121-4611
                  id: 68b3fa147a03b547a3ec7c90
                  loginRetryLimit: 0
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-06-07T13:16:38.015Z'
                  updatedAt: '2026-03-31T13:53:36.552Z'
  /client/auth/forgot-password:
    post:
      tags:
        - client > login
      summary: Forgot Password in client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: yourmail@gmail.com
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: otp successfully send to your email.
                data: {}
  /client/auth/validate-otp:
    post:
      tags:
        - client > login
      summary: Validate OTP in client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                otp: '5898'
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Invalid OTP
                data: {}
  /client/auth/logout:
    post:
      tags:
        - client > login
      summary: Logout in client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /client/api/v1/user/change-password:
    put:
      tags:
        - client > login
      summary: Change Password in client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                oldPassword: OldPassword
                newPassword: NewPassword
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Password changed successfully
                data: {}
  /client/auth/reset-password:
    put:
      tags:
        - client > login
      summary: Reset password in client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                code: '5898'
                newPassword: yourPassword
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Password reset successfully
                data: {}
  /client/api/v1/role/{id}:
    get:
      tags:
        - client > role
      summary: getrole
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Olga Funk
                  code: Borders
                  weight: 248
                  id: 68b3fa147a03b547a3ec7c9e
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-08-14T21:40:22.002Z'
                  updatedAt: '2026-05-01T16:37:08.480Z'
  /client/api/v1/role/create:
    post:
      tags:
        - client > role
      summary: addrole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Olga Funk
                code: Borders
                weight: 248
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Olga Funk
                  code: Borders
                  weight: 248
                  id: 68b3fa147a03b547a3ec7c98
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-08-14T21:40:22.002Z'
                  updatedAt: '2026-05-01T16:37:08.480Z'
  /client/api/v1/role/addBulk:
    post:
      tags:
        - client > role
      summary: insertBulkrole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - name: Olga Funk
                    code: Borders
                    weight: 248
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/role/list:
    post:
      tags:
        - client > role
      summary: findAllrole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Olga Funk
                      code: Borders
                      weight: 248
                      id: 68b3fa147a03b547a3ec7c9a
                      isDeleted: false
                      isActive: true
                      createdAt: '2026-08-14T21:40:22.002Z'
                      updatedAt: '2026-05-01T16:37:08.480Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/role/count:
    post:
      tags:
        - client > role
      summary: getroleCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/role/deleteMany:
    post:
      tags:
        - client > role
      summary: deleteManyrole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/role/updateBulk:
    put:
      tags:
        - client > role
      summary: updateBulkrole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/role/softDeleteMany:
    put:
      tags:
        - client > role
      summary: softDeleteManyrole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/role/softDelete/{id}:
    put:
      tags:
        - client > role
      summary: softDeleterole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/role/partial-update/{id}:
    put:
      tags:
        - client > role
      summary: partialupdaterole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Olga Funk
                  code: Borders
                  weight: 248
                  id: 68b3fa147a03b547a3ec7c9c
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-08-14T21:40:22.002Z'
                  updatedAt: '2026-05-01T16:37:08.480Z'
  /client/api/v1/role/update/{id}:
    put:
      tags:
        - client > role
      summary: updaterole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Olga Funk
                code: Borders
                weight: 248
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Olga Funk
                  code: Borders
                  weight: 248
                  id: 68b3fa147a03b547a3ec7c9d
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-08-14T21:40:22.002Z'
                  updatedAt: '2026-05-01T16:37:08.480Z'
  /client/api/v1/role/delete/{id}:
    delete:
      tags:
        - client > role
      summary: deleterole
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/projectroute/{id}:
    get:
      tags:
        - client > projectRoute
      summary: getprojectRoute
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  route_name: Chair
                  method: Designer
                  uri: Synergized
                  id: 68b3fa147a03b547a3ec7ca6
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-07-06T02:17:01.368Z'
                  updatedAt: '2025-12-21T15:22:24.475Z'
  /client/api/v1/projectroute/create:
    post:
      tags:
        - client > projectRoute
      summary: addprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                route_name: Chair
                method: Designer
                uri: Synergized
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  route_name: Chair
                  method: Designer
                  uri: Synergized
                  id: 68b3fa147a03b547a3ec7ca0
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-07-06T02:17:01.368Z'
                  updatedAt: '2025-12-21T15:22:24.475Z'
  /client/api/v1/projectroute/addBulk:
    post:
      tags:
        - client > projectRoute
      summary: insertBulkprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - route_name: Chair
                    method: Designer
                    uri: Synergized
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/projectroute/list:
    post:
      tags:
        - client > projectRoute
      summary: findAllprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - route_name: Chair
                      method: Designer
                      uri: Synergized
                      id: 68b3fa147a03b547a3ec7ca2
                      isDeleted: false
                      isActive: true
                      createdAt: '2026-07-06T02:17:01.368Z'
                      updatedAt: '2025-12-21T15:22:24.475Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/projectroute/count:
    post:
      tags:
        - client > projectRoute
      summary: getprojectRouteCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/projectroute/deleteMany:
    post:
      tags:
        - client > projectRoute
      summary: deleteManyprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/projectroute/updateBulk:
    put:
      tags:
        - client > projectRoute
      summary: updateBulkprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/projectroute/softDeleteMany:
    put:
      tags:
        - client > projectRoute
      summary: softDeleteManyprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/projectroute/softDelete/{id}:
    put:
      tags:
        - client > projectRoute
      summary: softDeleteprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/projectroute/partial-update/{id}:
    put:
      tags:
        - client > projectRoute
      summary: partialupdateprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  route_name: Chair
                  method: Designer
                  uri: Synergized
                  id: 68b3fa147a03b547a3ec7ca4
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-07-06T02:17:01.368Z'
                  updatedAt: '2025-12-21T15:22:24.475Z'
  /client/api/v1/projectroute/update/{id}:
    put:
      tags:
        - client > projectRoute
      summary: updateprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                route_name: Chair
                method: Designer
                uri: Synergized
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  route_name: Chair
                  method: Designer
                  uri: Synergized
                  id: 68b3fa147a03b547a3ec7ca5
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-07-06T02:17:01.368Z'
                  updatedAt: '2025-12-21T15:22:24.475Z'
  /client/api/v1/projectroute/delete/{id}:
    delete:
      tags:
        - client > projectRoute
      summary: deleteprojectRoute
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/routerole/{id}:
    get:
      tags:
        - client > routeRole
      summary: getrouteRole
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  routeId: 68b3fa147a03b547a3ec7ca7
                  roleId: 68b3fa147a03b547a3ec7ca8
                  id: 68b3fa147a03b547a3ec7cb0
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-12-02T14:57:28.301Z'
                  updatedAt: '2025-11-23T11:24:01.824Z'
  /client/api/v1/routerole/create:
    post:
      tags:
        - client > routeRole
      summary: addrouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                routeId: 68b3fa147a03b547a3ec7ca7
                roleId: 68b3fa147a03b547a3ec7ca8
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  routeId: 68b3fa147a03b547a3ec7ca7
                  roleId: 68b3fa147a03b547a3ec7ca8
                  id: 68b3fa147a03b547a3ec7caa
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-12-02T14:57:28.301Z'
                  updatedAt: '2025-11-23T11:24:01.824Z'
  /client/api/v1/routerole/addBulk:
    post:
      tags:
        - client > routeRole
      summary: insertBulkrouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - routeId: 68b3fa147a03b547a3ec7ca7
                    roleId: 68b3fa147a03b547a3ec7ca8
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/routerole/list:
    post:
      tags:
        - client > routeRole
      summary: findAllrouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - routeId: 68b3fa147a03b547a3ec7ca7
                      roleId: 68b3fa147a03b547a3ec7ca8
                      id: 68b3fa147a03b547a3ec7cac
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-12-02T14:57:28.301Z'
                      updatedAt: '2025-11-23T11:24:01.824Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/routerole/count:
    post:
      tags:
        - client > routeRole
      summary: getrouteRoleCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/routerole/deleteMany:
    post:
      tags:
        - client > routeRole
      summary: deleteManyrouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/routerole/updateBulk:
    put:
      tags:
        - client > routeRole
      summary: updateBulkrouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/routerole/softDeleteMany:
    put:
      tags:
        - client > routeRole
      summary: softDeleteManyrouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/routerole/softDelete/{id}:
    put:
      tags:
        - client > routeRole
      summary: softDeleterouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/routerole/partial-update/{id}:
    put:
      tags:
        - client > routeRole
      summary: partialupdaterouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  routeId: 68b3fa147a03b547a3ec7ca7
                  roleId: 68b3fa147a03b547a3ec7ca8
                  id: 68b3fa147a03b547a3ec7cae
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-12-02T14:57:28.301Z'
                  updatedAt: '2025-11-23T11:24:01.824Z'
  /client/api/v1/routerole/update/{id}:
    put:
      tags:
        - client > routeRole
      summary: updaterouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                routeId: 68b3fa147a03b547a3ec7ca7
                roleId: 68b3fa147a03b547a3ec7ca8
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  routeId: 68b3fa147a03b547a3ec7ca7
                  roleId: 68b3fa147a03b547a3ec7ca8
                  id: 68b3fa147a03b547a3ec7caf
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-12-02T14:57:28.301Z'
                  updatedAt: '2025-11-23T11:24:01.824Z'
  /client/api/v1/routerole/delete/{id}:
    delete:
      tags:
        - client > routeRole
      summary: deleterouteRole
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/userrole/{id}:
    get:
      tags:
        - client > userRole
      summary: getuserRole
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  userId: 68b3fa147a03b547a3ec7cb1
                  roleId: 68b3fa147a03b547a3ec7cb2
                  id: 68b3fa147a03b547a3ec7cba
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-01-05T19:01:52.609Z'
                  updatedAt: '2025-12-31T00:22:01.610Z'
  /client/api/v1/userrole/create:
    post:
      tags:
        - client > userRole
      summary: adduserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                userId: 68b3fa147a03b547a3ec7cb1
                roleId: 68b3fa147a03b547a3ec7cb2
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  userId: 68b3fa147a03b547a3ec7cb1
                  roleId: 68b3fa147a03b547a3ec7cb2
                  id: 68b3fa147a03b547a3ec7cb4
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-01-05T19:01:52.609Z'
                  updatedAt: '2025-12-31T00:22:01.610Z'
  /client/api/v1/userrole/addBulk:
    post:
      tags:
        - client > userRole
      summary: insertBulkuserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - userId: 68b3fa147a03b547a3ec7cb1
                    roleId: 68b3fa147a03b547a3ec7cb2
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/userrole/list:
    post:
      tags:
        - client > userRole
      summary: findAlluserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - userId: 68b3fa147a03b547a3ec7cb1
                      roleId: 68b3fa147a03b547a3ec7cb2
                      id: 68b3fa147a03b547a3ec7cb6
                      isDeleted: false
                      isActive: true
                      createdAt: '2026-01-05T19:01:52.609Z'
                      updatedAt: '2025-12-31T00:22:01.610Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/userrole/count:
    post:
      tags:
        - client > userRole
      summary: getuserRoleCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/userrole/deleteMany:
    post:
      tags:
        - client > userRole
      summary: deleteManyuserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/userrole/updateBulk:
    put:
      tags:
        - client > userRole
      summary: updateBulkuserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/userrole/softDeleteMany:
    put:
      tags:
        - client > userRole
      summary: softDeleteManyuserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/userrole/softDelete/{id}:
    put:
      tags:
        - client > userRole
      summary: softDeleteuserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/userrole/partial-update/{id}:
    put:
      tags:
        - client > userRole
      summary: partialupdateuserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  userId: 68b3fa147a03b547a3ec7cb1
                  roleId: 68b3fa147a03b547a3ec7cb2
                  id: 68b3fa147a03b547a3ec7cb8
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-01-05T19:01:52.609Z'
                  updatedAt: '2025-12-31T00:22:01.610Z'
  /client/api/v1/userrole/update/{id}:
    put:
      tags:
        - client > userRole
      summary: updateuserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                userId: 68b3fa147a03b547a3ec7cb1
                roleId: 68b3fa147a03b547a3ec7cb2
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  userId: 68b3fa147a03b547a3ec7cb1
                  roleId: 68b3fa147a03b547a3ec7cb2
                  id: 68b3fa147a03b547a3ec7cb9
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-01-05T19:01:52.609Z'
                  updatedAt: '2025-12-31T00:22:01.610Z'
  /client/api/v1/userrole/delete/{id}:
    delete:
      tags:
        - client > userRole
      summary: deleteuserRole
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
